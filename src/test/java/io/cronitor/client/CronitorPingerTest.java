package io.cronitor.client;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;
import java.net.URL;
import java.util.Map;

import static org.junit.Assert.assertEquals;
import java.net.HttpURLConnection;

@PrepareForTest({ URL.class, HttpURLConnection.class, CronitorPinger.class })
@RunWith(PowerMockRunner.class)
public class CronitorPingerTest {

    private CronitorPinger pinger = new CronitorPinger();

    private String code = "d3x0c1";
    private String command = "run";
    private String apiKey = "anApiKey";
    private String message = null;
    private String env = null;
    private Map<String, Integer> metrics = null;

    @Test
    public void canPingCronitorLink() throws Exception {
        // set the url generated by passing usePrimaryPingDomain=true to setURL
        URL url = pinger.getURL(true, true, command, code, apiKey, env, message, metrics);
        pinger.setConnection(url, apiKey);
        pinger._ping();
        assertEquals(pinger.connection.getResponseCode(), HttpURLConnection.HTTP_OK);
        assertEquals(pinger.connection.getURL().toString(), "https://cronitor.link/p/anApiKey/d3x0c1?state=run");
    }

    @Test
    public void canPingCronitorIO() throws Exception {
        // set the url generated by passing usePrimaryPingDomain=false to setURL
        URL url = pinger.getURL(false, true, command, code, apiKey, env, message, metrics);
        pinger.setConnection(url, apiKey);
        pinger._ping();
        assertEquals(pinger.connection.getResponseCode(), HttpURLConnection.HTTP_OK);
        assertEquals(pinger.connection.getURL().toString(), "https://cronitor.io/p/anApiKey/d3x0c1?state=run");
    }

}
